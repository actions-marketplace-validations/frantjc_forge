name: Release
on:
  push:
    tags:
      - v*
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: get semver
        id: get-semver
        run: |
          SEMVER=${GITHUB_REF#refs/tags/v}
          VERSION=$(awk -F- '{print $$1}' <<< ${SEMVER})
          PRERELEASE=$(awk -F- '{print $NF}' <<< ${SEMVER})
          echo "::set-output name=semver::${SEMVER}"
          echo "::set-output name=version::${VERSION}"
          echo "::set-output name=prerelease::${PRERELEASE}"
      - id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v${{ steps.get-semver.outputs.semver }}
          draft: true
          prerelease: ${{ steps.get-semver.outputs.prerelease != "" }}
    outputs:
      upload-url: ${{ steps.create-release.outputs.upload_url }}
      semver: ${{ steps.get-semver.outputs.semver }}
      version: ${{ steps.get-semver.outputs.version }}
      prerelease: ${{ steps.get-semver.outputs.prerelease }}
  upload-release-assets:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        GOOS:
          - darwin
          - linux
          - windows
        GOARCH:
          - amd64
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - run: make build
        env:
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
          VERSION: ${{ needs.create-release.outputs.version }}
          PRERELEASE: ${{ needs.create-release.outputs.prerelease }}
      - id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload-url }}
          asset_path: ./bin/4ge
          asset_name: forge-${{ needs.create-release.outputs.semver }}-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
